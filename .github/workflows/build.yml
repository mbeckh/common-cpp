name: build

on:
  push:
    branches: [ master, 'feature**' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build and Test
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [ Debug, Release ]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build
      uses: mbeckh/msvc-common/actions/build@v2
      with:
        projects: m3c, m3c_Test, m4t
        configuration: ${{ matrix.configuration }}

    - name: Run tests
      if: matrix.configuration != 'Debug'
      uses: mbeckh/msvc-common/actions/run@v2
      with:
        projects: m3c_Test
        configuration: ${{ matrix.configuration }}

    - name: Run tests and get coverage
      if: matrix.configuration == 'Debug'
      uses: mbeckh/msvc-common/actions/coverage@v2
      with:
        projects: m3c_Test
        configuration: ${{ matrix.configuration }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        codacy-token: ${{ secrets.CODACY_PROJECT_API_TOKEN }}

    - name: Save output
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: output
        path: .mbeckh/output
        
    - name: Save coverage reports
      if: matrix.configuration == 'Debug'
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: .mbeckh/coverage

  analyze:
    name: Analyze code
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [ Debug, Release ]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Configure Debug arguments
      if: matrix.configuration == 'Debug'
      run: echo "analyze_args=-D_DEBUG -DLLAMALOG_LEVEL_DEBUG" >> $GITHUB_ENV
      shell: bash

    - name: Configure Release arguments
      if: matrix.configuration != 'Debug'
      run: echo "analyze_args=-DNDEBUG LLAMALOG_LEVEL_INFO" >> $GITHUB_ENV
      shell: bash

    - name: Analyze code
      uses: mbeckh/msvc-common/actions/analyze-clang-tidy@v2
      with:
        id: ${{ matrix.configuration }}
        clang-args: -D_WIN32_WINNT=0x0602 ${{ env.analyze_args }}
    
    - name: Save logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: clang-tidy
        path: .mbeckh/clang-tidy-*.log

  report:
    name: Report code analysis
    runs-on: windows-latest
    needs: analyze

    steps:
    - name: Get logs
      uses: actions/download-artifact@v2
      with:
        name: clang-tidy
        path: .mbeckh

    - name: Report to Codacy
      uses: mbeckh/msvc-common/actions/analyze-report@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        codacy-token: ${{ secrets.CODACY_PROJECT_API_TOKEN }}
